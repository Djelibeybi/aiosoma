name: CI

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "docs/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
      - "**/*.md"
  pull_request:
    paths:
      - "src/**"
      - "docs/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
      - "**/*.md"

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint source code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: pre-commit/action@v3.0.0

  # Make sure commit messages follow the conventional commits convention:
  # https://www.conventionalcommits.org
  commitlint:
    name: Lint commit messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5.4.3

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.11"
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: snok/install-poetry@v1.3.4
      - name: Install Dependencies
        run: poetry install --with=test --without=dev --without=hass
        shell: bash
      - name: Test with Pytest
        run: poetry run pytest --cov-report=xml
        shell: bash
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
    if: github.ref == 'refs/heads/main'
    needs:
      - test
      - lint
      - commitlint

    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4

      # This action uses Python Semantic Release v8
      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v8.0.8
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
        # See https://github.com/actions/runner/issues/1173
        if: steps.release.outputs.released == 'true'

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
