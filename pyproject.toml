[tool.poetry]
name = "aiosoma"
version = "1.1.13"
description = "Asyncio SOMA Connect"
authors = ["Avi Miller <me@dje.li>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/Djelibeybi/aiosoma"
documentation = "https://aiosoma.readthedocs.io"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Topic :: Home Automation",
    "Typing :: Typed"
]
packages = [{ include = "aiosoma", from = "src" }]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Djelibeybi/aiosoma/issues"
"Changelog" = "https://github.com/Djelibeybi/aiosoma/blob/main/CHANGELOG.md"

[tool.poetry.scripts]
soma = "aiosoma.__cli__:cli"

[tool.poetry.dependencies]
python = "^3.11"
backoff = "^2.2.1"
rich = "^13.0.0"
aiohttp = "3.8.6"
pre-commit = "3.5.0"
black = "23.10.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.0"
black = "^23.0.0"
isort = "^5.11.2"
codespell = "^2.2.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.0"
pytest-cov = "^4.0"
pytest-asyncio = "^0.21.0"
pytest-aiohttp = "^1.0.4"
aioresponses = "^0.7.4"
freezegun = "^1.2.2"
types-freezegun = "^1.1.10"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
myst-parser = ">=0.16"
sphinx = ">=4.0"
sphinx-rtd-theme = ">=1.0"

[tool.poetry.group.hass]
optional = true

[tool.poetry.group.hass.dependencies]
homeassistant = "^2023.0.0"

[tool.semantic_release]
branch = "main"
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["src/aiosoma/__init__.py:__version__"]
build_command = "poetry build"

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=aiosoma --cov-report=term-missing:skip-covered --ignore src/aiosoma/__cli__.py"
pythonpath = ["src"]


[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
    'if __name__ == "__main__":',
    'def __repr__',
    'raise AssertionError',
    'raise NotImplementedError',
]

[tool.isort]
profile = "black"
known_first_party = ["aiosoma", "tests"]

[tool.codespell]
ignore-words-list = "hass"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = ['docs/.*', 'setup.py']

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true


[[tool.mypy.overrides]]
module = "docs.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "aiosoma.__cli__"
ignore_errors = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
